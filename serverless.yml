service: prowess-serverless
app: prowess
org: skstrafer14
frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  timeout: 15
  environment:
    RestApiId:  
      Ref: HttpApi
    VALORANT_API_KEY: ${env:VALORANT_API_KEY}
    DISCORD_WEBHOOK: ${env:DISCORD_WEBHOOK}
    SESSIONS_TABLE: ${self:custom.sessionTableName}
    PUUID_TABLE: ${self:custom.puuidTableName}
  apiGateway:
    shouldStartNameWithService: true
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["SessionDynamoDBTable", "Arn" ] }
        - { "Fn::GetAtt": ["PuuidDynamoDBTable", "Arn" ] }


functions:
  puuidv2:
    handler: get_puuidv2.main
    events:
      - httpApi:
          path: /dev/api/v2/users/{region}/{game_name_with_tagline}
          method: get
          throttling:
            maxRequestsPerSecond: 500
            maxConcurrentRequests: 100
  datav2:
    handler: update_and_retrieve_datav2.main
    events:
      - httpApi:
          path: /dev/api/v2/data/{session_id}
          method: get
          throttling:
            maxRequestsPerSecond: 500
            maxConcurrentRequests: 100
  reset:
    handler: restart_session.main
    events:
      - httpApi:
          path: /dev/api/v1/data/restart
          method: put
          throttling:
            maxRequestsPerSecond: 500
            maxConcurrentRequests: 100

resources:
  Resources:
    SessionDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sessionTableName}
        AttributeDefinitions:
          - AttributeName: sessionId
            AttributeType: S
        KeySchema:
          - AttributeName: sessionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    PuuidDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.puuidTableName}
        AttributeDefinitions:
          - AttributeName: playerIdentity
            AttributeType: S
        KeySchema:
          - AttributeName: playerIdentity
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

plugins:
  - serverless-python-requirements
  - serverless-offline
  - serverless-api-gateway-throttling

custom:
  sessionTableName: 'sessions-table-${self:provider.stage}'
  puuidTableName: 'puuid-table-${self:provider.stage}'
  pythonRequirements:
    dockerizePip: true
  apiGatewayThrottling:
    maxRequestsPerSecond: 500
    maxConcurrentRequests: 100
